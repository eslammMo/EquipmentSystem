@using EquipmentsSystem.Client.Services.AuthService
@using EquipmentsSystem.Client.Services.EquipmentService
@using EquipmentsSystem.Shared.Models
@using Microsoft.AspNetCore.Http
@using System.Net
@using MudBlazor
@inject IAuthService AuthService


<EditForm Model="userId" OnValidSubmit="ChangePassord">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Filled.HideSource" Class="mr-3 mb-n1" />
                تغير كلمة السر
            </MudText>
        </TitleContent>
        <DialogContent>
                        <MudGrid>
           <!-- Password Input -->
                <MudItem xs="12">
                    <MudTextField Label="كلمة المرور الجديدة" 
                                  @bind-Value="password" 
                                  InputType="InputType.Password" 
                                  Required="true" >
                    </MudTextField>
                </MudItem>
                <!-- Confirm Password Input -->
                <MudItem xs="12">
                    <MudTextField Label="تأكيد كلمة المرور" 
                                  @bind-Value="confirmPassword" 
                                  InputType="InputType.Password" 
                                  Required="true" 
                                  >
                    </MudTextField>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton Size="Size.Small" StartIcon="@Icons.Material.Filled.Cancel" Variant="Variant.Filled" Color="Color.Dark" ButtonType="ButtonType.Button" Class="m-1" OnClick="Cancel">الغاء</MudButton>
            <MudButton Variant="Variant.Filled"  Class="ml-auto" Size="Size.Small" ButtonType="ButtonType.Submit" Color="Color.Error">
                تأكيد</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }
    [Parameter] public int userId { get; set; }
    public string password = "";
    public string confirmPassword = "";

    bool loading = true;
    private string prompt = string.Empty;

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnParametersSetAsync()
    {
        prompt = "هل تريد التأكيد علي حذف هذه المعده ؟";
        loading = false;
    }

    async Task ChangePassord()
    {
        if(string.IsNullOrEmpty(password)  )
        {
            Snackbar.Add("يجب ادخال كلمة مرور ", Severity.Error);
            return;
        }
        if ( password != confirmPassword)
        {
            Snackbar.Add("كلمة السر غير متطابقة ", Severity.Error);
            return;
        }
        var newpass = new UserChangePassword()
        {
            Id = userId,
            Password = password
        };
        var result =await AuthService.ChangePassword(newpass);
        if(result.Success)
            Snackbar.Add("تم تغيير كلمة السر ", Severity.Success);
        else
            Snackbar.Add("حدث خطأ ما", Severity.Error);

        MudDialog.Close(DialogResult.Ok("Done"));
    }

    void Cancel() => MudDialog.Cancel();
}